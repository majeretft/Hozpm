@model AsideFormViewModel

@using (Html.BeginForm("Index", "Catalog", FormMethod.Post, new { @class = "catalog-filter collapse" }))
{
	@Html.AntiForgeryToken()

	<input type="hidden" id="@nameof(Model.PageNumber)" name="@nameof(Model.PageNumber)" value="@Model.PageNumber" />

	<div class="form-inline sorting-form">
		<div class="form-group">
			<label>Сортировать по: </label>
			@Html.DropDownListFor(x => x.OrderSelected, Constants.Form.OrderList, new { @class = "form-control" })
		</div>
		<div class="form-group">
			<label>Отображать по: </label>
			@Html.DropDownListFor(x => x.DisplaySelected, Constants.Form.DisplayList, new { @class = "form-control" })
		</div>
	</div>

	<div class="aside-form">
		<div class="form-group">
			<label>Группа</label>
			@Html.DropDownListFor(x => x.GroupSelected, Model.Groups, new { @class = "form-control" })
			<div class="checkbox">
				<label>
					@Html.CheckBoxFor(x => Model.GroupAny) Любая группа
				</label>
			</div>
		</div>
		<div class="form-group">
			<label>Назначение</label>
			<span class="help-block">Возможен выбор нескольких назначений</span>
			<div class="checkbox-list">
				<div>
					@for (var i = 0; i < Model.Purposes.Count(); i++)
					{
						var purposes = Model.Purposes.ToList();

						<div class="checkbox">
							<label>
								@Html.HiddenFor(x => purposes[i].Value)
								@Html.CheckBoxFor(x => purposes[i].Selected) @purposes[i].Text
							</label>
						</div>
					}
				</div>
			</div>
			<div class="checkbox">
				<label>
					@Html.CheckBoxFor(x => Model.PurposeAny) Любое назначение
				</label>
			</div>
		</div>
		<div class="form-group form-inline">
			<label>Масса <span class="hidden-xs">от</span></label>
			<br class="visible-md"/>
			@Html.TextBoxFor(x => x.WeightFrom, new { @class = "form-control", placeholder = "от" })
			<label class="hidden-xs">до</label>
			@Html.TextBoxFor(x => x.WeightTo, new { @class = "form-control", placeholder = "до" })
			@Html.DropDownListFor(x => x.WeightSelected, Constants.Form.WeightList, new { @class = "form-control" })
		</div>
		<div class="form-group form-inline">
			<label>Объем <span class="hidden-xs">от</span></label>
			<br class="visible-md" />
			@Html.TextBoxFor(x => x.VolumeFrom, new { @class = "form-control", placeholder = "от" })
			<label class="hidden-xs">до</label>
			@Html.TextBoxFor(x => x.VolumeTo, new { @class = "form-control", placeholder = "от" })
			@Html.DropDownListFor(x => x.VolumeSelected, Constants.Form.VolumeList, new { @class = "form-control" })
		</div>
		<div class="form-group">
			<label>Артикул</label>
			<div class="input-group">
				<div class="input-group-addon">A</div>
				@Html.TextBoxFor(x => x.Code, new { @class = "form-control", placeholder = "Артикул (без A)" })
			</div>
		</div>
		<button type="submit" class="btn btn-primary btn-block">Применить</button>
	</div>
}
