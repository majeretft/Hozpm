<?xml version="1.0" encoding="utf-8"?>

<!-- For more information on using web.config transformation visit http://go.microsoft.com/fwlink/?LinkId=125889 -->

<configuration xmlns:xdt="http://schemas.microsoft.com/XML-Document-Transform">
	<!--
    In the example below, the "SetAttributes" transform will change the value of 
    "connectionString" to use "ReleaseSQLServer" only when the "Match" locator 
    finds an attribute "name" that has a value of "MyDB".
    
    <connectionStrings>
      <add name="MyDB" 
        connectionString="Data Source=ReleaseSQLServer;Initial Catalog=MyReleaseDB;Integrated Security=True" 
        xdt:Transform="SetAttributes" xdt:Locator="Match(name)"/>
    </connectionStrings>
  -->
	<configSections>
		<sectionGroup name="elmah" xdt:Transform="Insert">
			<section name="security" requirePermission="false" type="Elmah.SecuritySectionHandler, Elmah" />
			<section name="errorLog" requirePermission="false" type="Elmah.ErrorLogSectionHandler, Elmah" />
			<section name="errorMail" requirePermission="false" type="Elmah.ErrorMailSectionHandler, Elmah" />
			<section name="errorFilter" requirePermission="false" type="Elmah.ErrorFilterSectionHandler, Elmah" />
		</sectionGroup>
	</configSections>
	<system.web>
		<compilation xdt:Transform="RemoveAttributes(debug)" />
		<!--
      In the example below, the "Replace" transform will replace the entire 
      <customErrors> section of your web.config file.
      Note that because there is only one customErrors section under the 
      <system.web> node, there is no need to use the "xdt:Locator" attribute.
      
      <customErrors defaultRedirect="GenericError.htm"
        mode="RemoteOnly" xdt:Transform="Replace">
        <error statusCode="500" redirect="InternalError.htm"/>
      </customErrors>
    -->
		<httpModules xdt:Transform="Insert">
			<add name="ErrorLog" type="Elmah.ErrorLogModule, Elmah" />
			<add name="ErrorMail" type="Elmah.ErrorMailModule, Elmah" />
			<add name="ErrorFilter" type="Elmah.ErrorFilterModule, Elmah" />
		</httpModules>
		<customErrors mode="On" defaultRedirect="/error" xdt:Transform="Insert">
			<error statusCode="404" redirect="/error/http404" />
			<error statusCode="500" redirect="/error/http500" />
		</customErrors>
		<caching >
			<outputCache enableOutputCache="true" xdt:Transform="SetAttributes(enableOutputCache)"/>
		</caching>
	</system.web>
	<system.webServer>
		<modules>
			<add name="ErrorLog" type="Elmah.ErrorLogModule, Elmah" preCondition="managedHandler" xdt:Transform="Insert"/>
			<add name="ErrorMail" type="Elmah.ErrorMailModule, Elmah" preCondition="managedHandler" xdt:Transform="Insert"/>
			<add name="ErrorFilter" type="Elmah.ErrorFilterModule, Elmah" preCondition="managedHandler" xdt:Transform="Insert"/>
		</modules>
	</system.webServer>
	<elmah xdt:Transform="Insert">
		<!--See http://code.google.com/p/elmah/wiki/SecuringErrorLogPages for 
				more information on remote access and securing ELMAH.-->
		<security allowRemoteAccess="true" />
		<errorLog type="Elmah.XmlFileErrorLog, Elmah" logPath="~/App_Data/errorlogs" />
	</elmah>
	<location path="elmah.axd" inheritInChildApplications="false" xdt:Transform="Insert">
		<system.web>
			<httpHandlers>
				<add verb="POST,GET,HEAD" path="elmah.axd" type="Elmah.ErrorLogPageFactory, Elmah" />
			</httpHandlers>
			<!--See http://code.google.com/p/elmah/wiki/SecuringErrorLogPages for
				more information on using ASP.NET authorization securing ELMAH.-->
			<authorization>
				<allow roles="*" />
				<!--<allow roles="admin" />-->
				<!--<deny users="*" />-->
			</authorization>
		</system.web>
		<system.webServer>
			<handlers>
				<add name="ELMAH" verb="POST,GET,HEAD" path="elmah.axd" type="Elmah.ErrorLogPageFactory, Elmah" preCondition="integratedMode" />
			</handlers>
		</system.webServer>
	</location>
</configuration>